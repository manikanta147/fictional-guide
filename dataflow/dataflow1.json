{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "student_data",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "output_param",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "flowlet1",
					"flowlet": {
						"referenceName": "groupby_flowlet",
						"type": "DataFlowReference"
					}
				}
			],
			"scriptLines": [
				"source(output(",
				"          student_id as string,",
				"          name as string,",
				"          city as string,",
				"          fees as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 compose(mapColumn(",
				"          student_id,",
				"          name,",
				"          city,",
				"          fees",
				"     ),",
				"     composition: 'groupby_flowlet') ~> flowlet1@(output1)",
				"flowlet1@output1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          id as string,",
				"          type as string,",
				"          name as string,",
				"          ppu as string,",
				"          {batter.id} as string,",
				"          {batter.type} as string,",
				"          {topping.id} as string,",
				"          {topping.nam} as string",
				"     ),",
				"     partitionFileNames:['Non-duplicates.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}